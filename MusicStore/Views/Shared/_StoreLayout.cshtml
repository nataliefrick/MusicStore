@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@*@model IEnumerable<MusicStore.Models.Genre> //IEnumerable means the view will be expecting several Genre objects rather than just one

This tells the Razor view engine that it will be working with a model object that can hold several Genre objects. We're using an IEnumerable<Genre> rather than a List<Genre> since it's more generic, allowing us to change our model type later to any object type that supports the IEnumerable interface.*@

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - MusicStore</title>
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/site.css" asp-append-version="true">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css" integrity="sha384-b6lVK+yci+bfDmaY1u0zE8YYJt0TZxLEAFyYSLHId4xoVvsrQu3INevFKo+Xir8e" crossorigin="anonymous">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">MusicStore</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarColor01">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" asp-area="" asp-controller="Store" asp-action="Index">Store</a>
                        </li>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Cart" asp-action="Cart">Cart</a>
                            </li>
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
<div class="container text-center">
    <div class="row">
        <div class="col-3 bg-light">
            <h3 class="mt-5">Browse</h3>

                <div class="btn-group-vertical">
                    

                    @foreach(var genre in ViewBag.genre) {
                   
                    @*<li><a href="/Store/Browse?genre=@genre.Name">@genre.Name</a></li> // hardcoding a link*@
                    @*dynamic link @Html.ActionLink(Link text, Controller action name, Route parameter values)
                            @Html.ActionLink("Link Text", "ActionName", new { controller = "MyController", id = 1 }, new { @class = "my-class" })
                    *@
                        @*StoreManager?searchString=&FilterGenre=Rock*@
                    @*<button type="button" class="btn btn-primary">*@@Html.ActionLink((string) genre.Name.ToString(), "Index", new { FilterGenre = genre.Name }, new { @class = "btn btn-primary" }) @*</button>*@
                    }
            </div>




        </div>






            <div class="col-9">
                <div class="container">
                    <main class="pb-3">
                        @RenderBody()
                    </main>
                </div>
            </div>
    </div>
</div>

    

    @*    <footer class="border-top footer text-muted">
    <div class="container">
    &copy; 2023 - MusicStore - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
    </footer>*@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>


    <script>
        loadCartCount();

        async function loadCartCount() {

            try {
                var response = await fetch(`/Cart/GetCartCount`);
                if (response.status == 200) {
                    var result = await response.json(); //returns the nr of items in the cart
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                }
            }
            catch (err) {
                console.log(err);
            }

        }
    </script>

</body>
</html>




